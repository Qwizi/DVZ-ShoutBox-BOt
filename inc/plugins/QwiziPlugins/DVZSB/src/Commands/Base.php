<?php
declare (strict_types = 1);

namespace Qwizi\DVZSB\Commands;

use Qwizi\DVZSB\Bot;

class Base
{
    public $returned_value = [];

    private $bot;
    private $commandPrefix;
    private $error;
    private $message;

    protected $mybb;
    protected $db;
    protected $lang;
    protected $plugins;
    protected $PL;

    public function __construct(Bot $bot)
    {
        $this->bot = $bot;
        $this->mybb = $this->bot->getMybb();
        $this->db = $this->bot->getDb();
        $this->lang = $this->bot->getLang();
        $this->plugins = $this->bot->getPlugins();
        $this->PL = $this->bot->getPL();
        $this->commandPrefix = $this->bot->settings('commands_prefix');
    }

    public function getMessage()
    {
        return $this->message;
    }

    public function getError()
    {
        return $this->error;
    }

    public function getCommandPrefix()
    {
        return $this->commandPrefix;
    }

    public function setMessage(string $message): void
    {
        $this->message = $message;
    }

    public function setError(string $error): void
    {
        $this->error = $error;
    }

    public function send(): void
    {
        if (isset($this->error)) {
            $this->bot->shout($this->error);
        } else {
            $this->bot->shout($this->message);
        }
    }

    public function deleteShout($where = ""): void
    {
        $this->bot->delete($where);
    }

    public function baseCommandPattern(string $command): string
    {
        $pattern = "\\" . $this->getCommandPrefix() . preg_quote($command);
        return $pattern;
    }

    public function isMember($groups, $user = false)
    {
        if (empty($groups)) {
            return array();
        }
        if ($user == false) {
            $user = $this->mybb->user;
        } else if (!is_array($user)) {
            // Assume it's a UID
            $user = get_user($user);
        }
        $memberships = array_map('intval', explode(',', $user['additionalgroups']));
        $memberships[] = $user['usergroup'];
        if (!is_array($groups)) {
            if ((int) $groups == -1) {
                return $memberships;
            } else {
                if (is_string($groups)) {
                    $groups = explode(',', $groups);
                } else {
                    $groups = (array) $groups;
                }
            }
        }
        $groups = array_filter(array_map('intval', $groups));
        return array_intersect($groups, $memberships);
    }

    public function accessMod()
    {
        $array = explode(",", $this->mybb->settings['dvz_sb_groups_mod']);

        return (
            ($array[0] == -1 || $this->isMember($array)) ||
            ($this->mybb->settings['dvz_sb_supermods'] && $this->mybb->usergroup['issupermod'])
        );
    }

    public function rebuildSettings()
    {
        $db = $this->db;
        $mybb = $this->mybb;
        $query = $db->simple_select("settings", "value, name", "", array(
            'order_by' => 'title',
            'order_dir' => 'ASC',
        ));
        $settings = '';
        while ($setting = $db->fetch_array($query)) {
            $mybb->settings[$setting['name']] = $setting['value'];
            $setting['value'] = addcslashes($setting['value'], '\\"$');
            $settings .= "\$settings['{$setting['name']}'] = \"{$setting['value']}\";\n";
        }
        $settings = "<" . "?php\n/*********************************\ \n  DO NOT EDIT THIS FILE, PLEASE USE\n  THE SETTINGS EDITOR\n\*********************************/\n\n$settings\n";
        file_put_contents(MYBB_ROOT . 'inc/settings.php', $settings, LOCK_EX);
        $GLOBALS['settings'] = &$mybb->settings;
    }

    public function getUserIdFromUsername($username)
    {
        $db = $this->db;
        return $db->fetch_array($db->simple_select('users', "uid", 'username="' . $username . '"'));
    }

    public function getUserNameFromId($uid)
    {
        $db = $this->db;
        $user = $db->fetch_array($db->simple_select('users', "username", 'uid="' . $uid . '"'));
        return $user;
    }
}
